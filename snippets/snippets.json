{
    "Ember.Application": {
      "prefix": "em.Application",
      "body": "import Application from '@ember/application';"
    },
    "Ember.ApplicationInstance": {
      "prefix": "em.ApplicationInstance",
      "body": "import ApplicationInstance from '@ember/application/instance';"
    },
    "Ember.Engine": {
      "prefix": "em.Engine",
      "body": "import Engine from '@ember/engine';"
    },
    "Ember.EngineInstance": {
      "prefix": "em.EngineInstance",
      "body": "import EngineInstance from '@ember/engine/instance';"
    },
    "Ember.getEngineParent": {
      "prefix": "em.getEngineParent",
      "body": "import { getEngineParent }  from '@ember/engine';"
    },
    "Ember.Error": {
      "prefix": "em.Error",
      "body": "import Error from '@ember/error';"
    },
    "Ember.onLoad": {
      "prefix": "em.onLoad",
      "body": "import { onLoad }  from '@ember/application';"
    },
    "Ember.runLoadHooks": {
      "prefix": "em.runLoadHooks",
      "body": "import { runLoadHooks }  from '@ember/application';"
    },
    "Ember.deprecate": {
      "prefix": "em.deprecate",
      "body": "import { deprecate }  from '@ember/application/deprecations';"
    },
    "Ember.deprecateFunc": {
      "prefix": "em.deprecateFunc",
      "body": "import { deprecateFunc }  from '@ember/application/deprecations';"
    },
    "Ember.getOwner": {
      "prefix": "em.getOwner",
      "body": "import { getOwner }  from '@ember/application';"
    },
    "Ember.setOwner": {
      "prefix": "em.setOwner",
      "body": "import { setOwner }  from '@ember/application';"
    },
    "Ember.Controller": {
      "prefix": "em.Controller",
      "body": "import Controller from '@ember/controller';"
    },
    "Ember.inject.controller": {
      "prefix": "em.inject.controller",
      "body": "import { ${1|inject,inject as controller|} } from '@ember/controller';"
    },
    "Ember.Array": {
      "prefix": "em.Array",
      "body": "import Array from '@ember/array';"
    },
    "Ember.A": {
      "prefix": "em.A",
      "body": "import { A }  from '@ember/array';"
    },
    "Ember.isArray": {
      "prefix": "em.isArray",
      "body": "import { isArray }  from '@ember/array';"
    },
    "Ember.makeArray": {
      "prefix": "em.makeArray",
      "body": "import { makeArray }  from '@ember/array';"
    },
    "Ember.MutableArray": {
      "prefix": "em.MutableArray",
      "body": "import MutableArray from '@ember/array/mutable';"
    },
    "Ember.ArrayProxy": {
      "prefix": "em.ArrayProxy",
      "body": "import ArrayProxy from '@ember/array/proxy';"
    },
    "Ember.CoreObject": {
      "prefix": "em.CoreObject",
      "body": "import CoreObject from '@ember/object/core';"
    },
    "Ember.Object": {
      "prefix": "em.Object",
      "body": "import Object from '@ember/object';"
    },
    "Ember.defineProperty": {
      "prefix": "em.defineProperty",
      "body": "import { defineProperty }  from '@ember/object';"
    },
    "Ember.get": {
      "prefix": "em.get",
      "body": "import { get }  from '@ember/object';"
    },
    "Ember.set": {
      "prefix": "em.set",
      "body": "import { set }  from '@ember/object';"
    },
    "Ember.getProperties": {
      "prefix": "em.getProperties",
      "body": "import { getProperties }  from '@ember/object';"
    },
    "Ember.setProperties": {
      "prefix": "em.setProperties",
      "body": "import { setProperties }  from '@ember/object';"
    },
    "Ember.getWithDefault": {
      "prefix": "em.getWithDefault",
      "body": "import { getWithDefault }  from '@ember/object';"
    },
    "Ember.observer": {
      "prefix": "em.observer",
      "body": "import { observer }  from '@ember/object';"
    },
    "Ember.computed": {
      "prefix": "em.computed",
      "body": "import { computed }  from '@ember/object';"
    },
    "Ember.ComputedProperty": {
      "prefix": "em.ComputedProperty",
      "body": "import ComputedProperty from '@ember/object/computed';"
    },
    "Ember.trySet": {
      "prefix": "em.trySet",
      "body": "import { trySet }  from '@ember/object';"
    },
    "Ember.aliasMethod": {
      "prefix": "em.aliasMethod",
      "body": "import { aliasMethod }  from '@ember/object';"
    },
    "Ember.expandProperties": {
      "prefix": "em.expandProperties",
      "body": "import { expandProperties }  from '@ember/object/computed';"
    },
    "Ember.computed.empty": {
      "prefix": "em.computed.empty",
      "body": "import { empty }  from '@ember/object/computed';"
    },
    "Ember.computed.notEmpty": {
      "prefix": "em.computed.notEmpty",
      "body": "import { notEmpty }  from '@ember/object/computed';"
    },
    "Ember.computed.none": {
      "prefix": "em.computed.none",
      "body": "import { none }  from '@ember/object/computed';"
    },
    "Ember.computed.not": {
      "prefix": "em.computed.not",
      "body": "import { not }  from '@ember/object/computed';"
    },
    "Ember.computed.bool": {
      "prefix": "em.computed.bool",
      "body": "import { bool }  from '@ember/object/computed';"
    },
    "Ember.computed.match": {
      "prefix": "em.computed.match",
      "body": "import { match }  from '@ember/object/computed';"
    },
    "Ember.computed.equal": {
      "prefix": "em.computed.equal",
      "body": "import { equal }  from '@ember/object/computed';"
    },
    "Ember.computed.gt": {
      "prefix": "em.computed.gt",
      "body": "import { gt }  from '@ember/object/computed';"
    },
    "Ember.computed.gte": {
      "prefix": "em.computed.gte",
      "body": "import { gte }  from '@ember/object/computed';"
    },
    "Ember.computed.lt": {
      "prefix": "em.computed.lt",
      "body": "import { lt }  from '@ember/object/computed';"
    },
    "Ember.computed.lte": {
      "prefix": "em.computed.lte",
      "body": "import { lte }  from '@ember/object/computed';"
    },
    "Ember.computed.alias": {
      "prefix": "em.computed.alias",
      "body": "import { alias }  from '@ember/object/computed';"
    },
    "Ember.computed.oneWay": {
      "prefix": "em.computed.oneWay",
      "body": "import { oneWay }  from '@ember/object/computed';"
    },
    "Ember.computed.reads": {
      "prefix": "em.computed.reads",
      "body": "import { reads }  from '@ember/object/computed';"
    },
    "Ember.computed.readOnly": {
      "prefix": "em.computed.readOnly",
      "body": "import { readOnly }  from '@ember/object/computed';"
    },
    "Ember.computed.deprecatingAlias": {
      "prefix": "em.computed.deprecatingAlias",
      "body": "import { deprecatingAlias }  from '@ember/object/computed';"
    },
    "Ember.computed.and": {
      "prefix": "em.computed.and",
      "body": "import { and }  from '@ember/object/computed';"
    },
    "Ember.computed.or": {
      "prefix": "em.computed.or",
      "body": "import { or }  from '@ember/object/computed';"
    },
    "Ember.computed.collect": {
      "prefix": "em.computed.collect",
      "body": "import { collect }  from '@ember/object/computed';"
    },
    "Ember.computed.sum": {
      "prefix": "em.computed.sum",
      "body": "import { sum }  from '@ember/object/computed';"
    },
    "Ember.computed.min": {
      "prefix": "em.computed.min",
      "body": "import { min }  from '@ember/object/computed';"
    },
    "Ember.computed.max": {
      "prefix": "em.computed.max",
      "body": "import { max }  from '@ember/object/computed';"
    },
    "Ember.computed.map": {
      "prefix": "em.computed.map",
      "body": "import { map }  from '@ember/object/computed';"
    },
    "Ember.computed.sort": {
      "prefix": "em.computed.sort",
      "body": "import { sort }  from '@ember/object/computed';"
    },
    "Ember.computed.setDiff": {
      "prefix": "em.computed.setDiff",
      "body": "import { setDiff }  from '@ember/object/computed';"
    },
    "Ember.computed.mapBy": {
      "prefix": "em.computed.mapBy",
      "body": "import { mapBy }  from '@ember/object/computed';"
    },
    "Ember.computed.mapProperty": {
      "prefix": "em.computed.mapProperty",
      "body": "import { mapProperty }  from '@ember/object/computed';"
    },
    "Ember.computed.filter": {
      "prefix": "em.computed.filter",
      "body": "import { filter }  from '@ember/object/computed';"
    },
    "Ember.computed.filterBy": {
      "prefix": "em.computed.filterBy",
      "body": "import { filterBy }  from '@ember/object/computed';"
    },
    "Ember.computed.filterProperty": {
      "prefix": "em.computed.filterProperty",
      "body": "import { filterProperty }  from '@ember/object/computed';"
    },
    "Ember.computed.uniq": {
      "prefix": "em.computed.uniq",
      "body": "import { uniq }  from '@ember/object/computed';"
    },
    "Ember.computed.uniqBy": {
      "prefix": "em.computed.uniqBy",
      "body": "import { uniqBy }  from '@ember/object/computed';"
    },
    "Ember.computed.union": {
      "prefix": "em.computed.union",
      "body": "import { union }  from '@ember/object/computed';"
    },
    "Ember.computed.intersect": {
      "prefix": "em.computed.intersect",
      "body": "import { intersect }  from '@ember/object/computed';"
    },
    "Ember.Evented": {
      "prefix": "em.Evented",
      "body": "import Evented from '@ember/object/evented';"
    },
    "Ember.on": {
      "prefix": "em.on",
      "body": "import { on }  from '@ember/object/evented';"
    },
    "Ember.addListener": {
      "prefix": "em.addListener",
      "body": "import { addListener }  from '@ember/object/events';"
    },
    "Ember.removeListener": {
      "prefix": "em.removeListener",
      "body": "import { removeListener }  from '@ember/object/events';"
    },
    "Ember.sendEvent": {
      "prefix": "em.sendEvent",
      "body": "import { sendEvent }  from '@ember/object/events';"
    },
    "Ember.Mixin": {
      "prefix": "em.Mixin",
      "body": "import Mixin from '@ember/object/mixin';"
    },
    "Ember.ObjectProxy": {
      "prefix": "em.ObjectProxy",
      "body": "import ObjectProxy from '@ember/object/proxy';"
    },
    "Ember.PromiseProxyMixin": {
      "prefix": "em.PromiseProxyMixin",
      "body": "import PromiseProxyMixin from '@ember/object/promise-proxy-mixin';"
    },
    "Ember.addObserver": {
      "prefix": "em.addObserver",
      "body": "import { addObserver }  from '@ember/object/observers';"
    },
    "Ember.removeObserver": {
      "prefix": "em.removeObserver",
      "body": "import { removeObserver }  from '@ember/object/observers';"
    },
    "Ember.Observable": {
      "prefix": "em.Observable",
      "body": "import Observable from '@ember/object/observable';"
    },
    "Ember.copy": {
      "prefix": "em.copy",
      "body": "import { copy }  from '@ember/object/internals';"
    },
    "Ember.guidFor": {
      "prefix": "em.guidFor",
      "body": "import { guidFor }  from '@ember/object/internals';"
    },
    "Ember.cacheFor": {
      "prefix": "em.cacheFor",
      "body": "import { cacheFor }  from '@ember/object/internals';"
    },
    "Ember.Component": {
      "prefix": "em.Component",
      "body": "import Component from '@ember/component';"
    },
    "Ember.Checkbox": {
      "prefix": "em.Checkbox",
      "body": "import Checkbox from '@ember/component/checkbox';"
    },
    "Ember.TextArea": {
      "prefix": "em.TextArea",
      "body": "import TextArea from '@ember/component/text-area';"
    },
    "Ember.TextField": {
      "prefix": "em.TextField",
      "body": "import TextField from '@ember/component/text-field';"
    },
    "Ember.debug": {
      "prefix": "em.debug",
      "body": "import { debug }  from '@ember/debug';"
    },
    "Ember.inspect": {
      "prefix": "em.inspect",
      "body": "import { inspect }  from '@ember/debug';"
    },
    "Ember.runInDebug": {
      "prefix": "em.runInDebug",
      "body": "import { runInDebug }  from '@ember/debug';"
    },
    "Ember.warn": {
      "prefix": "em.warn",
      "body": "import { warn }  from '@ember/debug';"
    },
    "Ember.assert": {
      "prefix": "em.assert",
      "body": "import { assert }  from '@ember/debug';"
    },
    "Ember.Debug.registerDeprecationHandler": {
      "prefix": "em.Debug.registerDeprecationHandler",
      "body": "import { registerDeprecationHandler }  from '@ember/debug';"
    },
    "Ember.Debug.registerWarnHandler": {
      "prefix": "em.Debug.registerWarnHandler",
      "body": "import { registerWarnHandler }  from '@ember/debug';"
    },
    "Ember.ContainerDebugAdapter": {
      "prefix": "em.ContainerDebugAdapter",
      "body": "import ContainerDebugAdapter from '@ember/debug/container-debug-adapter';"
    },
    "Ember.DataAdapter": {
      "prefix": "em.DataAdapter",
      "body": "import DataAdapter from '@ember/debug/data-adapter';"
    },
    "Ember.Resolver": {
      "prefix": "em.Resolver",
      "body": "import Resolver from '@ember/application/resolver';"
    },
    "Ember.DefaultResolver": {
      "prefix": "em.DefaultResolver",
      "body": "import GlobalsResolver from '@ember/application/globals-resolver';"
    },
    "Ember.Helper": {
      "prefix": "em.Helper",
      "body": "import Helper from '@ember/component/helper';"
    },
    "Ember.Helper.helper": {
      "prefix": "em.Helper.helper",
      "body": "import { helper }  from '@ember/component/helper';"
    },
    "Ember.Instrumentation.instrument": {
      "prefix": "em.Instrumentation.instrument",
      "body": "import { instrument }  from '@ember/instrumentation';"
    },
    "Ember.Instrumentation.reset": {
      "prefix": "em.Instrumentation.reset",
      "body": "import { reset }  from '@ember/instrumentation';"
    },
    "Ember.Instrumentation.subscribe": {
      "prefix": "em.Instrumentation.subscribe",
      "body": "import { subscribe }  from '@ember/instrumentation';"
    },
    "Ember.Instrumentation.unsubscribe": {
      "prefix": "em.Instrumentation.unsubscribe",
      "body": "import { unsubscribe }  from '@ember/instrumentation';"
    },
    "Ember.Location": {
      "prefix": "em.Location",
      "body": "import Location from '@ember/routing/location';"
    },
    "Ember.AutoLocation": {
      "prefix": "em.AutoLocation",
      "body": "import AutoLocation from '@ember/routing/auto-location';"
    },
    "Ember.HashLocation": {
      "prefix": "em.HashLocation",
      "body": "import HashLocation from '@ember/routing/hash-location';"
    },
    "Ember.HistoryLocation": {
      "prefix": "em.HistoryLocation",
      "body": "import HistoryLocation from '@ember/routing/history-location';"
    },
    "Ember.NoneLocation": {
      "prefix": "em.NoneLocation",
      "body": "import NoneLocation from '@ember/routing/none-location';"
    },
    "Ember.LinkComponent": {
      "prefix": "em.LinkComponent",
      "body": "import LinkComponent from '@ember/routing/link-component';"
    },
    "Ember.Map": {
      "prefix": "em.Map",
      "body": "import Map from '@ember/map';"
    },
    "Ember.MapWithDefault": {
      "prefix": "em.MapWithDefault",
      "body": "import MapWithDefault from '@ember/map/with-default';"
    },
    "Ember.Enumerable": {
      "prefix": "em.Enumerable",
      "body": "import Enumerable from '@ember/enumerable';"
    },
    "Ember.assign": {
      "prefix": "em.assign",
      "body": "import { assign }  from '@ember/polyfills';"
    },
    "Ember.merge": {
      "prefix": "em.merge",
      "body": "import { merge }  from '@ember/polyfills';"
    },
    "Ember.create": {
      "prefix": "em.create",
      "body": "import { create }  from '@ember/polyfills';"
    },
    "Ember.keys": {
      "prefix": "em.keys",
      "body": "import { keys }  from '@ember/polyfills';"
    },
    "Ember.platform.hasPropertyAccessors": {
      "prefix": "em.platform.hasPropertyAccessors",
      "body": "import { hasPropertyAccessors }  from '@ember/polyfills';"
    },
    "Ember.Route": {
      "prefix": "em.Route",
      "body": "import Route from '@ember/routing/route';"
    },
    "Ember.Router": {
      "prefix": "em.Router",
      "body": "import EmberRouter from '@ember/routing/router';"
    },
    "Ember.run": {
      "prefix": "em.run",
      "body": "import { run }  from '@ember/runloop';"
    },
    "Ember.run.begin": {
      "prefix": "em.run.begin",
      "body": "import { begin }  from '@ember/runloop';"
    },
    "Ember.run.bind": {
      "prefix": "em.run.bind",
      "body": "import { bind }  from '@ember/runloop';"
    },
    "Ember.run.cancel": {
      "prefix": "em.run.cancel",
      "body": "import { cancel }  from '@ember/runloop';"
    },
    "Ember.run.debounce": {
      "prefix": "em.run.debounce",
      "body": "import { debounce }  from '@ember/runloop';"
    },
    "Ember.run.end": {
      "prefix": "em.run.end",
      "body": "import { end }  from '@ember/runloop';"
    },
    "Ember.run.join": {
      "prefix": "em.run.join",
      "body": "import { join }  from '@ember/runloop';"
    },
    "Ember.run.later": {
      "prefix": "em.run.later",
      "body": "import { later }  from '@ember/runloop';"
    },
    "Ember.run.next": {
      "prefix": "em.run.next",
      "body": "import { next }  from '@ember/runloop';"
    },
    "Ember.run.once": {
      "prefix": "em.run.once",
      "body": "import { once }  from '@ember/runloop';"
    },
    "Ember.run.schedule": {
      "prefix": "em.run.schedule",
      "body": "import { schedule }  from '@ember/runloop';"
    },
    "Ember.run.scheduleOnce": {
      "prefix": "em.run.scheduleOnce",
      "body": "import { scheduleOnce }  from '@ember/runloop';"
    },
    "Ember.run.throttle": {
      "prefix": "em.run.throttle",
      "body": "import { throttle }  from '@ember/runloop';"
    },
    "Ember.Service": {
      "prefix": "em.Service",
      "body": "import Service from '@ember/service';"
    },
    "Ember.inject.service": {
      "prefix": "em.inject.service",
      "body": "import { ${1|inject,inject as service|} } from '@ember/service';"
    },
    "Ember.String.camelize": {
      "prefix": "em.String.camelize",
      "body": "import { camelize }  from '@ember/string';"
    },
    "Ember.String.capitalize": {
      "prefix": "em.String.capitalize",
      "body": "import { capitalize }  from '@ember/string';"
    },
    "Ember.String.classify": {
      "prefix": "em.String.classify",
      "body": "import { classify }  from '@ember/string';"
    },
    "Ember.String.dasherize": {
      "prefix": "em.String.dasherize",
      "body": "import { dasherize }  from '@ember/string';"
    },
    "Ember.String.decamelize": {
      "prefix": "em.String.decamelize",
      "body": "import { decamelize }  from '@ember/string';"
    },
    "Ember.String.fmt": {
      "prefix": "em.String.fmt",
      "body": "import { fmt }  from '@ember/string';"
    },
    "Ember.String.htmlSafe": {
      "prefix": "em.String.htmlSafe",
      "body": "import { htmlSafe }  from '@ember/string';"
    },
    "Ember.String.isHTMLSafe": {
      "prefix": "em.String.isHTMLSafe",
      "body": "import { isHTMLSafe }  from '@ember/string';"
    },
    "Ember.String.loc": {
      "prefix": "em.String.loc",
      "body": "import { loc }  from '@ember/string';"
    },
    "Ember.String.underscore": {
      "prefix": "em.String.underscore",
      "body": "import { underscore }  from '@ember/string';"
    },
    "Ember.String.w": {
      "prefix": "em.String.w",
      "body": "import { w }  from '@ember/string';"
    },
    "Ember.Test.Adapter": {
      "prefix": "em.Test.Adapter",
      "body": "import TestAdapter from '@ember/test/adapter';"
    },
    "Ember.Test.registerAsyncHelper": {
      "prefix": "em.Test.registerAsyncHelper",
      "body": "import { registerAsyncHelper }  from '@ember/test';"
    },
    "Ember.Test.registerHelper": {
      "prefix": "em.Test.registerHelper",
      "body": "import { registerHelper }  from '@ember/test';"
    },
    "Ember.Test.registerWaiter": {
      "prefix": "em.Test.registerWaiter",
      "body": "import { registerWaiter }  from '@ember/test';"
    },
    "Ember.Test.unregisterHelper": {
      "prefix": "em.Test.unregisterHelper",
      "body": "import { unregisterHelper }  from '@ember/test';"
    },
    "Ember.Test.unregisterWaiter": {
      "prefix": "em.Test.unregisterWaiter",
      "body": "import { unregisterWaiter }  from '@ember/test';"
    },
    "Ember.isBlank": {
      "prefix": "em.isBlank",
      "body": "import { isBlank }  from '@ember/utils';"
    },
    "Ember.isEmpty": {
      "prefix": "em.isEmpty",
      "body": "import { isEmpty }  from '@ember/utils';"
    },
    "Ember.isEqual": {
      "prefix": "em.isEqual",
      "body": "import { isEqual }  from '@ember/utils';"
    },
    "Ember.isNone": {
      "prefix": "em.isNone",
      "body": "import { isNone }  from '@ember/utils';"
    },
    "Ember.isPresent": {
      "prefix": "em.isPresent",
      "body": "import { isPresent }  from '@ember/utils';"
    },
    "Ember.tryInvoke": {
      "prefix": "em.tryInvoke",
      "body": "import { tryInvoke }  from '@ember/utils';"
    },
    "Ember.typeOf": {
      "prefix": "em.typeOf",
      "body": "import { typeOf }  from '@ember/utils';"
    },
    "Ember.compare": {
      "prefix": "em.compare",
      "body": "import { compare }  from '@ember/utils';"
    },
    "Ember.$": {
      "prefix": "em.$",
      "body": "import $ from 'jquery';"
    },
    "Ember.RSVP": {
      "prefix": "em.RSVP",
      "body": "import RSVP from 'rsvp';"
    },
    "Ember.RSVP.all": {
      "prefix": "em.RSVP.all",
      "body": "import { all }  from 'rsvp';"
    },
    "Ember.RSVP.allSettled": {
      "prefix": "em.RSVP.allSettled",
      "body": "import { allSettled }  from 'rsvp';"
    },
    "Ember.RSVP.race": {
      "prefix": "em.RSVP.race",
      "body": "import { race }  from 'rsvp';"
    },
    "Ember.RSVP.hash": {
      "prefix": "em.RSVP.hash",
      "body": "import { hash }  from 'rsvp';"
    },
    "Ember.RSVP.hashSettled": {
      "prefix": "em.RSVP.hashSettled",
      "body": "import { hashSettled }  from 'rsvp';"
    },
    "Ember.RSVP.defer": {
      "prefix": "em.RSVP.defer",
      "body": "import { defer }  from 'rsvp';"
    },
    "Ember.RSVP.denodeify": {
      "prefix": "em.RSVP.denodeify",
      "body": "import { denodeify }  from 'rsvp';"
    },
    "Ember.RSVP.on": {
      "prefix": "em.RSVP.on",
      "body": "import { on }  from 'rsvp';"
    },
    "Ember.RSVP.off": {
      "prefix": "em.RSVP.off",
      "body": "import { off }  from 'rsvp';"
    },
    "Ember.RSVP.resolve": {
      "prefix": "em.RSVP.resolve",
      "body": "import { resolve }  from 'rsvp';"
    },
    "Ember.RSVP.reject": {
      "prefix": "em.RSVP.reject",
      "body": "import { reject }  from 'rsvp';"
    },
    "Ember.RSVP.map": {
      "prefix": "em.RSVP.map",
      "body": "import { map }  from 'rsvp';"
    },
    "Ember.RSVP.filter": {
      "prefix": "em.RSVP.filter",
      "body": "import { filter }  from 'rsvp';"
    },
    "Ember.RSVP.Promise": {
      "prefix": "em.RSVP.Promise",
      "body": "import { Promise }  from 'rsvp';"
    }
  }
