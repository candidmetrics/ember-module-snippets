{
  "Ember Super": {
    "prefix": "E:super",
    "body": "this._super(...arguments);"
  },
  "Class Constructor": {
    "prefix": "E:constructor",
    "body": "constructor() {\n          super(...arguments);\n        }"
  },
  "Ember.Application": {
    "prefix": "E:Application",
    "body": "import Application from '@ember/application';"
  },
  "Ember.getOwner": {
    "prefix": "E:getOwner",
    "body": "import { getOwner } from '@ember/application';"
  },
  "Ember.onLoad": {
    "prefix": "E:onLoad",
    "body": "import { onLoad } from '@ember/application';"
  },
  "Ember.runLoadHooks": {
    "prefix": "E:runLoadHooks",
    "body": "import { runLoadHooks } from '@ember/application';"
  },
  "Ember.setOwner": {
    "prefix": "E:setOwner",
    "body": "import { setOwner } from '@ember/application';"
  },
  "Ember.DefaultResolver": {
    "prefix": "E:DefaultResolver",
    "body": "import GlobalsResolver from '@ember/application/globals-resolver';"
  },
  "Ember.ApplicationInstance": {
    "prefix": "E:ApplicationInstance",
    "body": "import ApplicationInstance from '@ember/application/instance';"
  },
  "Ember.Namespace": {
    "prefix": "E:Namespace",
    "body": "import Namespace from '@ember/application/namespace';"
  },
  "Ember.Resolver": {
    "prefix": "E:Resolver",
    "body": "import Resolver from '@ember/application/resolver';"
  },
  "Ember.Array": {
    "prefix": "E:Array",
    "body": "import EmberArray from '@ember/array';"
  },
  "Ember.A": {
    "prefix": "E:A",
    "body": "import { A } from '@ember/array';"
  },
  "Ember.isArray": {
    "prefix": "E:isArray",
    "body": "import { isArray } from '@ember/array';"
  },
  "Ember.makeArray": {
    "prefix": "E:makeArray",
    "body": "import { makeArray } from '@ember/array';"
  },
  "Ember.MutableArray": {
    "prefix": "E:MutableArray",
    "body": "import MutableArray from '@ember/array/mutable';"
  },
  "Ember.ArrayProxy": {
    "prefix": "E:ArrayProxy",
    "body": "import ArrayProxy from '@ember/array/proxy';"
  },
  "Ember.FEATURES": {
    "prefix": "E:FEATURES",
    "body": "import { FEATURES } from '@ember/canary-features';"
  },
  "Ember.FEATURES.isEnabled": {
    "prefix": "E:FEATURES.isEnabled",
    "body": "import { isEnabled } from '@ember/canary-features';"
  },
  "Ember.Component": {
    "prefix": "E:Component",
    "body": "import Component from '@ember/component';"
  },
  "Ember._componentManagerCapabilities": {
    "prefix": "E:_componentManagerCapabilities",
    "body": "import { capabilities } from '@ember/component';"
  },
  "Ember._setComponentManager": {
    "prefix": "E:_setComponentManager",
    "body": "import { setComponentManager } from '@ember/component';"
  },
  "Ember._getComponentTemplate": {
    "prefix": "E:_getComponentTemplate",
    "body": "import { getComponentTemplate } from '@ember/component';"
  },
  "Ember._setComponentTemplate": {
    "prefix": "E:_setComponentTemplate",
    "body": "import { setComponentTemplate } from '@ember/component';"
  },
  "Ember._templateOnlyComponent": {
    "prefix": "E:_templateOnlyComponent",
    "body": "import templateOnlyComponent from '@ember/component/template-only';"
  },
  "Ember._setModifierManager": {
    "prefix": "E:_setModifierManager",
    "body": "import { setModifierManager } from '@ember/modifier';"
  },
  "Ember._modifierManagerCapabilities": {
    "prefix": "E:_modifierManagerCapabilities",
    "body": "import { capabilities } from '@ember/modifier';"
  },
  "Ember.Checkbox": {
    "prefix": "E:Checkbox",
    "body": "import Checkbox from '@ember/component/checkbox';"
  },
  "Ember.Helper": {
    "prefix": "E:Helper",
    "body": "import Helper from '@ember/component/helper';"
  },
  "Ember.Helper.helper": {
    "prefix": "E:Helper.helper",
    "body": "import buildHelper from '@ember/component/helper';"
  },
  "Ember.TextArea": {
    "prefix": "E:TextArea",
    "body": "import TextArea from '@ember/component/text-area';"
  },
  "Ember.TextField": {
    "prefix": "E:TextField",
    "body": "import TextField from '@ember/component/text-field';"
  },
  "Ember.Controller": {
    "prefix": "E:Controller",
    "body": "import Controller from '@ember/controller';"
  },
  "Ember.inject.controller": {
    "prefix": "E:inject.controller",
    "body": "import { inject } from '@ember/controller';"
  },
  "Ember.assert": {
    "prefix": "E:assert",
    "body": "import { assert } from '@ember/debug';"
  },
  "Ember.debug": {
    "prefix": "E:debug",
    "body": "import { debug } from '@ember/debug';"
  },
  "Ember.inspect": {
    "prefix": "E:inspect",
    "body": "import { inspect } from '@ember/debug';"
  },
  "Ember.Debug.registerDeprecationHandler": {
    "prefix": "E:Debug.registerDeprecationHandler",
    "body": "import { registerDeprecationHandler } from '@ember/debug';"
  },
  "Ember.Debug.registerWarnHandler": {
    "prefix": "E:Debug.registerWarnHandler",
    "body": "import { registerWarnHandler } from '@ember/debug';"
  },
  "Ember.runInDebug": {
    "prefix": "E:runInDebug",
    "body": "import { runInDebug } from '@ember/debug';"
  },
  "Ember.warn": {
    "prefix": "E:warn",
    "body": "import { warn } from '@ember/debug';"
  },
  "Ember.ContainerDebugAdapter": {
    "prefix": "E:ContainerDebugAdapter",
    "body": "import ContainerDebugAdapter from '@ember/debug/container-debug-adapter';"
  },
  "Ember.DataAdapter": {
    "prefix": "E:DataAdapter",
    "body": "import DataAdapter from '@ember/debug/data-adapter';"
  },
  "Ember.Engine": {
    "prefix": "E:Engine",
    "body": "import Engine from '@ember/engine';"
  },
  "Ember.getEngineParent": {
    "prefix": "E:getEngineParent",
    "body": "import { getEngineParent } from '@ember/engine';"
  },
  "Ember.EngineInstance": {
    "prefix": "E:EngineInstance",
    "body": "import EngineInstance from '@ember/engine/instance';"
  },
  "Ember.Enumerable": {
    "prefix": "E:Enumerable",
    "body": "import Enumerable from '@ember/enumerable';"
  },
  "Ember.Error": {
    "prefix": "E:Error",
    "body": "import EmberError from '@ember/error';"
  },
  "Ember.Instrumentation.instrument": {
    "prefix": "E:Instrumentation.instrument",
    "body": "import { instrument } from '@ember/instrumentation';"
  },
  "Ember.Instrumentation.reset": {
    "prefix": "E:Instrumentation.reset",
    "body": "import { reset } from '@ember/instrumentation';"
  },
  "Ember.Instrumentation.subscribe": {
    "prefix": "E:Instrumentation.subscribe",
    "body": "import { subscribe } from '@ember/instrumentation';"
  },
  "Ember.Instrumentation.unsubscribe": {
    "prefix": "E:Instrumentation.unsubscribe",
    "body": "import { unsubscribe } from '@ember/instrumentation';"
  },
  "Ember.Map": {
    "prefix": "E:Map",
    "body": "import EmberMap from '@ember/map';"
  },
  "Ember.MapWithDefault": {
    "prefix": "E:MapWithDefault",
    "body": "import MapWithDefault from '@ember/map/with-default';"
  },
  "Ember.Object": {
    "prefix": "E:Object",
    "body": "import EmberObject from '@ember/object';"
  },
  "Ember._action": {
    "prefix": "E:_action",
    "body": "import { action } from '@ember/object';"
  },
  "Ember.aliasMethod": {
    "prefix": "E:aliasMethod",
    "body": "import { aliasMethod } from '@ember/object';"
  },
  "Ember.computed": {
    "prefix": "E:computed",
    "body": "import { computed } from '@ember/object';"
  },
  "Ember.defineProperty": {
    "prefix": "E:defineProperty",
    "body": "import { defineProperty } from '@ember/object';"
  },
  "Ember.get": {
    "prefix": "E:get",
    "body": "import { get } from '@ember/object';"
  },
  "Ember.getProperties": {
    "prefix": "E:getProperties",
    "body": "import { getProperties } from '@ember/object';"
  },
  "Ember.getWithDefault": {
    "prefix": "E:getWithDefault",
    "body": "import { getWithDefault } from '@ember/object';"
  },
  "Ember.notifyPropertyChange": {
    "prefix": "E:notifyPropertyChange",
    "body": "import { notifyPropertyChange } from '@ember/object';"
  },
  "Ember.observer": {
    "prefix": "E:observer",
    "body": "import { observer } from '@ember/object';"
  },
  "Ember.set": {
    "prefix": "E:set",
    "body": "import { set } from '@ember/object';"
  },
  "Ember.setProperties": {
    "prefix": "E:setProperties",
    "body": "import { setProperties } from '@ember/object';"
  },
  "Ember.trySet": {
    "prefix": "E:trySet",
    "body": "import { trySet } from '@ember/object';"
  },
  "Ember._dependentKeyCompat": {
    "prefix": "E:_dependentKeyCompat",
    "body": "import { dependentKeyCompat } from '@ember/object/compat';"
  },
  "Ember.ComputedProperty": {
    "prefix": "E:ComputedProperty",
    "body": "import ComputedProperty from '@ember/object/computed';"
  },
  "Ember.computed.alias": {
    "prefix": "E:computed.alias",
    "body": "import { alias } from '@ember/object/computed';"
  },
  "Ember.computed.and": {
    "prefix": "E:computed.and",
    "body": "import { and } from '@ember/object/computed';"
  },
  "Ember.computed.bool": {
    "prefix": "E:computed.bool",
    "body": "import { bool } from '@ember/object/computed';"
  },
  "Ember.computed.collect": {
    "prefix": "E:computed.collect",
    "body": "import { collect } from '@ember/object/computed';"
  },
  "Ember.computed.deprecatingAlias": {
    "prefix": "E:computed.deprecatingAlias",
    "body": "import { deprecatingAlias } from '@ember/object/computed';"
  },
  "Ember.computed.empty": {
    "prefix": "E:computed.empty",
    "body": "import { empty } from '@ember/object/computed';"
  },
  "Ember.computed.equal": {
    "prefix": "E:computed.equal",
    "body": "import { equal } from '@ember/object/computed';"
  },
  "Ember.expandProperties": {
    "prefix": "E:expandProperties",
    "body": "import { expandProperties } from '@ember/object/computed';"
  },
  "Ember.computed.filter": {
    "prefix": "E:computed.filter",
    "body": "import { filter } from '@ember/object/computed';"
  },
  "Ember.computed.filterBy": {
    "prefix": "E:computed.filterBy",
    "body": "import { filterBy } from '@ember/object/computed';"
  },
  "Ember.computed.filterProperty": {
    "prefix": "E:computed.filterProperty",
    "body": "import { filterProperty } from '@ember/object/computed';"
  },
  "Ember.computed.gt": {
    "prefix": "E:computed.gt",
    "body": "import { gt } from '@ember/object/computed';"
  },
  "Ember.computed.gte": {
    "prefix": "E:computed.gte",
    "body": "import { gte } from '@ember/object/computed';"
  },
  "Ember.computed.intersect": {
    "prefix": "E:computed.intersect",
    "body": "import { intersect } from '@ember/object/computed';"
  },
  "Ember.computed.lt": {
    "prefix": "E:computed.lt",
    "body": "import { lt } from '@ember/object/computed';"
  },
  "Ember.computed.lte": {
    "prefix": "E:computed.lte",
    "body": "import { lte } from '@ember/object/computed';"
  },
  "Ember.computed.map": {
    "prefix": "E:computed.map",
    "body": "import { map } from '@ember/object/computed';"
  },
  "Ember.computed.mapBy": {
    "prefix": "E:computed.mapBy",
    "body": "import { mapBy } from '@ember/object/computed';"
  },
  "Ember.computed.mapProperty": {
    "prefix": "E:computed.mapProperty",
    "body": "import { mapProperty } from '@ember/object/computed';"
  },
  "Ember.computed.match": {
    "prefix": "E:computed.match",
    "body": "import { match } from '@ember/object/computed';"
  },
  "Ember.computed.max": {
    "prefix": "E:computed.max",
    "body": "import { max } from '@ember/object/computed';"
  },
  "Ember.computed.min": {
    "prefix": "E:computed.min",
    "body": "import { min } from '@ember/object/computed';"
  },
  "Ember.computed.none": {
    "prefix": "E:computed.none",
    "body": "import { none } from '@ember/object/computed';"
  },
  "Ember.computed.not": {
    "prefix": "E:computed.not",
    "body": "import { not } from '@ember/object/computed';"
  },
  "Ember.computed.notEmpty": {
    "prefix": "E:computed.notEmpty",
    "body": "import { notEmpty } from '@ember/object/computed';"
  },
  "Ember.computed.oneWay": {
    "prefix": "E:computed.oneWay",
    "body": "import { oneWay } from '@ember/object/computed';"
  },
  "Ember.computed.or": {
    "prefix": "E:computed.or",
    "body": "import { or } from '@ember/object/computed';"
  },
  "Ember.computed.readOnly": {
    "prefix": "E:computed.readOnly",
    "body": "import { readOnly } from '@ember/object/computed';"
  },
  "Ember.computed.reads": {
    "prefix": "E:computed.reads",
    "body": "import { reads } from '@ember/object/computed';"
  },
  "Ember.computed.setDiff": {
    "prefix": "E:computed.setDiff",
    "body": "import { setDiff } from '@ember/object/computed';"
  },
  "Ember.computed.sort": {
    "prefix": "E:computed.sort",
    "body": "import { sort } from '@ember/object/computed';"
  },
  "Ember.computed.sum": {
    "prefix": "E:computed.sum",
    "body": "import { sum } from '@ember/object/computed';"
  },
  "Ember.computed.union": {
    "prefix": "E:computed.union",
    "body": "import { union } from '@ember/object/computed';"
  },
  "Ember.computed.uniq": {
    "prefix": "E:computed.uniq",
    "body": "import { uniq } from '@ember/object/computed';"
  },
  "Ember.computed.uniqBy": {
    "prefix": "E:computed.uniqBy",
    "body": "import { uniqBy } from '@ember/object/computed';"
  },
  "Ember.CoreObject": {
    "prefix": "E:CoreObject",
    "body": "import CoreObject from '@ember/object/core';"
  },
  "Ember.Evented": {
    "prefix": "E:Evented",
    "body": "import Evented from '@ember/object/evented';"
  },
  "Ember.on": {
    "prefix": "E:on",
    "body": "import { on } from '@ember/object/evented';"
  },
  "Ember.addListener": {
    "prefix": "E:addListener",
    "body": "import { addListener } from '@ember/object/events';"
  },
  "Ember.removeListener": {
    "prefix": "E:removeListener",
    "body": "import { removeListener } from '@ember/object/events';"
  },
  "Ember.sendEvent": {
    "prefix": "E:sendEvent",
    "body": "import { sendEvent } from '@ember/object/events';"
  },
  "Ember.cacheFor": {
    "prefix": "E:cacheFor",
    "body": "import { cacheFor } from '@ember/object/internals';"
  },
  "Ember.copy": {
    "prefix": "E:copy",
    "body": "import { copy } from '@ember/object/internals';"
  },
  "Ember.guidFor": {
    "prefix": "E:guidFor",
    "body": "import { guidFor } from '@ember/object/internals';"
  },
  "Ember.Mixin": {
    "prefix": "E:Mixin",
    "body": "import Mixin from '@ember/object/mixin';"
  },
  "Ember.Observable": {
    "prefix": "E:Observable",
    "body": "import Observable from '@ember/object/observable';"
  },
  "Ember.addObserver": {
    "prefix": "E:addObserver",
    "body": "import { addObserver } from '@ember/object/observers';"
  },
  "Ember.removeObserver": {
    "prefix": "E:removeObserver",
    "body": "import { removeObserver } from '@ember/object/observers';"
  },
  "Ember.PromiseProxyMixin": {
    "prefix": "E:PromiseProxyMixin",
    "body": "import PromiseProxyMixin from '@ember/object/promise-proxy-mixin';"
  },
  "Ember.ObjectProxy": {
    "prefix": "E:ObjectProxy",
    "body": "import ObjectProxy from '@ember/object/proxy';"
  },
  "Ember.assign": {
    "prefix": "E:assign",
    "body": "import { assign } from '@ember/polyfills';"
  },
  "Ember.create": {
    "prefix": "E:create",
    "body": "import { create } from '@ember/polyfills';"
  },
  "Ember.platform.hasPropertyAccessors": {
    "prefix": "E:platform.hasPropertyAccessors",
    "body": "import { hasPropertyAccessors } from '@ember/polyfills';"
  },
  "Ember.keys": {
    "prefix": "E:keys",
    "body": "import { keys } from '@ember/polyfills';"
  },
  "Ember.merge": {
    "prefix": "E:merge",
    "body": "import { merge } from '@ember/polyfills';"
  },
  "Ember.AutoLocation": {
    "prefix": "E:AutoLocation",
    "body": "import AutoLocation from '@ember/routing/auto-location';"
  },
  "Ember.HashLocation": {
    "prefix": "E:HashLocation",
    "body": "import HashLocation from '@ember/routing/hash-location';"
  },
  "Ember.HistoryLocation": {
    "prefix": "E:HistoryLocation",
    "body": "import HistoryLocation from '@ember/routing/history-location';"
  },
  "Ember.LinkComponent": {
    "prefix": "E:LinkComponent",
    "body": "import LinkComponent from '@ember/routing/link-component';"
  },
  "Ember.Location": {
    "prefix": "E:Location",
    "body": "import Location from '@ember/routing/location';"
  },
  "Ember.NoneLocation": {
    "prefix": "E:NoneLocation",
    "body": "import NoneLocation from '@ember/routing/none-location';"
  },
  "Ember.Route": {
    "prefix": "E:Route",
    "body": "import Route from '@ember/routing/route';"
  },
  "Ember.Router": {
    "prefix": "E:Router",
    "body": "import EmberRouter from '@ember/routing/router';"
  },
  "Ember.run.begin": {
    "prefix": "E:run.begin",
    "body": "import { begin } from '@ember/runloop';"
  },
  "Ember.run.bind": {
    "prefix": "E:run.bind",
    "body": "import { bind } from '@ember/runloop';"
  },
  "Ember.run.cancel": {
    "prefix": "E:run.cancel",
    "body": "import { cancel } from '@ember/runloop';"
  },
  "Ember.run.debounce": {
    "prefix": "E:run.debounce",
    "body": "import { debounce } from '@ember/runloop';"
  },
  "Ember.run.end": {
    "prefix": "E:run.end",
    "body": "import { end } from '@ember/runloop';"
  },
  "Ember.run.join": {
    "prefix": "E:run.join",
    "body": "import { join } from '@ember/runloop';"
  },
  "Ember.run.later": {
    "prefix": "E:run.later",
    "body": "import { later } from '@ember/runloop';"
  },
  "Ember.run.next": {
    "prefix": "E:run.next",
    "body": "import { next } from '@ember/runloop';"
  },
  "Ember.run.once": {
    "prefix": "E:run.once",
    "body": "import { once } from '@ember/runloop';"
  },
  "Ember.run": {
    "prefix": "E:run",
    "body": "import { run } from '@ember/runloop';"
  },
  "Ember.run.schedule": {
    "prefix": "E:run.schedule",
    "body": "import { schedule } from '@ember/runloop';"
  },
  "Ember.run.scheduleOnce": {
    "prefix": "E:run.scheduleOnce",
    "body": "import { scheduleOnce } from '@ember/runloop';"
  },
  "Ember.run.throttle": {
    "prefix": "E:run.throttle",
    "body": "import { throttle } from '@ember/runloop';"
  },
  "Ember.Service": {
    "prefix": "E:Service",
    "body": "import Service from '@ember/service';"
  },
  "Ember.inject.service": {
    "prefix": "E:inject.service",
    "body": "import { ${1|inject,inject as service|} } from '@ember/service';"
  },
  "Ember.String.camelize": {
    "prefix": "E:String.camelize",
    "body": "import { camelize } from '@ember/string';"
  },
  "Ember.String.capitalize": {
    "prefix": "E:String.capitalize",
    "body": "import { capitalize } from '@ember/string';"
  },
  "Ember.String.classify": {
    "prefix": "E:String.classify",
    "body": "import { classify } from '@ember/string';"
  },
  "Ember.String.dasherize": {
    "prefix": "E:String.dasherize",
    "body": "import { dasherize } from '@ember/string';"
  },
  "Ember.String.decamelize": {
    "prefix": "E:String.decamelize",
    "body": "import { decamelize } from '@ember/string';"
  },
  "Ember.String.fmt": {
    "prefix": "E:String.fmt",
    "body": "import { fmt } from '@ember/string';"
  },
  "Ember.String.loc": {
    "prefix": "E:String.loc",
    "body": "import { loc } from '@ember/string';"
  },
  "Ember.String.underscore": {
    "prefix": "E:String.underscore",
    "body": "import { underscore } from '@ember/string';"
  },
  "Ember.String.w": {
    "prefix": "E:String.w",
    "body": "import { w } from '@ember/string';"
  },
  "Ember.String.htmlSafe": {
    "prefix": "E:String.htmlSafe",
    "body": "import { htmlSafe } from '@ember/template';"
  },
  "Ember.String.isHTMLSafe": {
    "prefix": "E:String.isHTMLSafe",
    "body": "import { isHTMLSafe } from '@ember/template';"
  },
  "Ember.HTMLBars.compile": {
    "prefix": "E:HTMLBars.compile",
    "body": "import { compileTemplate } from '@ember/template-compilation';"
  },
  "Ember.HTMLBars.precompile": {
    "prefix": "E:HTMLBars.precompile",
    "body": "import { precompileTemplate } from '@ember/template-compilation';"
  },
  "Ember.HTMLBars.template": {
    "prefix": "E:HTMLBars.template",
    "body": "import { createTemplateFactory } from '@ember/template-factory';"
  },
  "Ember.Test.registerAsyncHelper": {
    "prefix": "E:Test.registerAsyncHelper",
    "body": "import { registerAsyncHelper } from '@ember/test';"
  },
  "Ember.Test.registerHelper": {
    "prefix": "E:Test.registerHelper",
    "body": "import { registerHelper } from '@ember/test';"
  },
  "Ember.Test.registerWaiter": {
    "prefix": "E:Test.registerWaiter",
    "body": "import { registerWaiter } from '@ember/test';"
  },
  "Ember.Test.unregisterHelper": {
    "prefix": "E:Test.unregisterHelper",
    "body": "import { unregisterHelper } from '@ember/test';"
  },
  "Ember.Test.unregisterWaiter": {
    "prefix": "E:Test.unregisterWaiter",
    "body": "import { unregisterWaiter } from '@ember/test';"
  },
  "Ember.Test.Adapter": {
    "prefix": "E:Test.Adapter",
    "body": "import TestAdapter from '@ember/test/adapter';"
  },
  "Ember.compare": {
    "prefix": "E:compare",
    "body": "import { compare } from '@ember/utils';"
  },
  "Ember.isBlank": {
    "prefix": "E:isBlank",
    "body": "import { isBlank } from '@ember/utils';"
  },
  "Ember.isEmpty": {
    "prefix": "E:isEmpty",
    "body": "import { isEmpty } from '@ember/utils';"
  },
  "Ember.isEqual": {
    "prefix": "E:isEqual",
    "body": "import { isEqual } from '@ember/utils';"
  },
  "Ember.isNone": {
    "prefix": "E:isNone",
    "body": "import { isNone } from '@ember/utils';"
  },
  "Ember.isPresent": {
    "prefix": "E:isPresent",
    "body": "import { isPresent } from '@ember/utils';"
  },
  "Ember.tryInvoke": {
    "prefix": "E:tryInvoke",
    "body": "import { tryInvoke } from '@ember/utils';"
  },
  "Ember.typeOf": {
    "prefix": "E:typeOf",
    "body": "import { typeOf } from '@ember/utils';"
  },
  "Ember.VERSION": {
    "prefix": "E:VERSION",
    "body": "import { VERSION } from '@ember/version';"
  },
  "Ember._tracked": {
    "prefix": "E:_tracked",
    "body": "import { tracked } from '@glimmer/tracking';"
  },
  "Ember.$": {
    "prefix": "E:$",
    "body": "import $ from 'jquery';"
  },
  "Ember.RSVP": {
    "prefix": "E:RSVP",
    "body": "import RSVP from 'rsvp';"
  },
  "Ember.RSVP.Promise": {
    "prefix": "E:RSVP.Promise",
    "body": "import { Promise } from 'rsvp';"
  },
  "Ember.RSVP.all": {
    "prefix": "E:RSVP.all",
    "body": "import { all } from 'rsvp';"
  },
  "Ember.RSVP.allSettled": {
    "prefix": "E:RSVP.allSettled",
    "body": "import { allSettled } from 'rsvp';"
  },
  "Ember.RSVP.defer": {
    "prefix": "E:RSVP.defer",
    "body": "import { defer } from 'rsvp';"
  },
  "Ember.RSVP.denodeify": {
    "prefix": "E:RSVP.denodeify",
    "body": "import { denodeify } from 'rsvp';"
  },
  "Ember.RSVP.filter": {
    "prefix": "E:RSVP.filter",
    "body": "import { filter } from 'rsvp';"
  },
  "Ember.RSVP.hash": {
    "prefix": "E:RSVP.hash",
    "body": "import { hash } from 'rsvp';"
  },
  "Ember.RSVP.hashSettled": {
    "prefix": "E:RSVP.hashSettled",
    "body": "import { hashSettled } from 'rsvp';"
  },
  "Ember.RSVP.map": {
    "prefix": "E:RSVP.map",
    "body": "import { map } from 'rsvp';"
  },
  "Ember.RSVP.off": {
    "prefix": "E:RSVP.off",
    "body": "import { off } from 'rsvp';"
  },
  "Ember.RSVP.on": {
    "prefix": "E:RSVP.on",
    "body": "import { on } from 'rsvp';"
  },
  "Ember.RSVP.race": {
    "prefix": "E:RSVP.race",
    "body": "import { race } from 'rsvp';"
  },
  "Ember.RSVP.reject": {
    "prefix": "E:RSVP.reject",
    "body": "import { reject } from 'rsvp';"
  },
  "Ember.RSVP.resolve": {
    "prefix": "E:RSVP.resolve",
    "body": "import { resolve } from 'rsvp';"
  }
}